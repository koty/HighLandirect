<UserControl x:Class="HighLandirect.Views.OrderListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Resources="clr-namespace:HighLandirect.Resources"
             xmlns:Properties="clr-namespace:HighLandirect.Properties"
             xmlns:c="clr-namespace:HighLandirect.Converters"
             xmlns:ViewModels="clr-namespace:HighLandirect.ViewModels"
             xmlns:v="clr-namespace:HighLandirect.Views"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance ViewModels:OrderListViewModel}"
             Background="#FF87B2F3" BorderBrush="#FF87B2F3">
    <DockPanel>
        <DockPanel.Resources>
            <ObjectDataProvider x:Key="productDataProvider" ObjectType="{x:Type Resources:Products}" MethodName="GetProducts"           />
            <ObjectDataProvider x:Key="storeDataProvider" ObjectType="{x:Type Resources:AdditionalData}" MethodName="GetStores"          />
            <ObjectDataProvider x:Key="reportMemoDataProvider" ObjectType="{x:Type Resources:AdditionalData}" MethodName="GetReportMemos" />
            <!--ObjectDataProvider x:Key="productDataProvider" ObjectType="{x:Type r:Products}"          /-->
            <!--ObjectDataProvider x:Key="storeDataProvider" ObjectType="{x:Type r:AdditionalData}"     /-->
            <!--ObjectDataProvider x:Key="reportMemoDataProvider" ObjectType="{x:Type r:AdditionalData}" /-->
            <c:ProductConverter x:Key="ProductConverter" />
            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Height" Value="30" />
            </Style>
        </DockPanel.Resources>
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <!--スタイルが適用されない。仕方ないので個別にHeightとFontSizeを設定する。-->
                <Button Command="{Binding PrintCommand}" Content="印刷" Width="100" Height="30"
                        FontSize="18" Margin="10,0,0,0" />
                <Button Command="{Binding RemoveCommand}" Content="削除" Height="30" FontSize="18"
                         Margin="10,0,0,0" />
            </ToolBar>
        </ToolBarTray>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="800"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="456"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <DataGrid ItemsSource="{Binding Orders}" SelectedItem="{Binding SelectedOrder}" 
                         AutoGenerateColumns="False" AlternationCount="1"
                         CanUserAddRows="False" FontSize="16" HorizontalScrollBarVisibility="Auto">
                <DataGrid.Columns>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button Content="↑" Command="{Binding Path=DataContext.MoveRowToUpperCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" />
                                    <Button Content="↓" Command="{Binding Path=DataContext.MoveRowToLowerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" />
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding Order.CustomerMasterReceive.CustNo}" Header="顧客番号" Width="60" IsReadOnly="True" />
                    <DataGridTextColumn Binding="{Binding Order.CustomerMasterReceive.CustName}" Header="氏名" Width="150" IsReadOnly="True" />
                    <DataGridTemplateColumn Header="品物" Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Order.ProductID, Mode=OneWay, Converter={StaticResource ProductConverter}, ConverterParameter=ProductName}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding Source={StaticResource productDataProvider}}"
                                          SelectedValue="{Binding Order.ProductID}" SelectedValuePath="ProductID" DisplayMemberPath="ProductName" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding Order.CustomerMasterReceive.PostalCD}" Header="郵便番号" Width="80" IsReadOnly="True" />
                    <DataGridTextColumn Binding="{Binding Order.CustomerMasterReceive.Address1}" Header="住所１" Width="150" IsReadOnly="True" />
                    <DataGridTextColumn Binding="{Binding Order.CustomerMasterReceive.Address2}" Header="住所２" Width="150" IsReadOnly="True" />
                    <DataGridTextColumn Binding="{Binding Order.CustomerMasterReceive.Address3}" Header="住所３" Width="150" IsReadOnly="True" />
                    <DataGridTextColumn Binding="{Binding Order.CustomerMasterReceive.Address4}" Header="住所４" Width="150" IsReadOnly="True" />
                    <DataGridTextColumn Binding="{Binding Order.CustomerMasterReceive.Phone}" Header="電話" Width="150" IsReadOnly="True" />
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Grid.Column="1">
                <v:CustomerView DataContext="{Binding SendCustomerViewModel}" Height="300"
                                Padding="0,0,0,10" ScrollViewer.VerticalScrollBarVisibility="Auto" />
                <StackPanel Orientation="Horizontal">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="160"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                                <Setter Property="FontSize" Value="18" />
                                <Setter Property="Foreground" Value="White" />
                            </Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="FontSize" Value="18" />
                                <Setter Property="Foreground" Value="White" />
                            </Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Setter Property="FontSize" Value="18" />
                            </Style>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                <Setter Property="FontSize" Value="18" />
                            </Style>
                        </Grid.Resources>
                        <ComboBox Width="120" Grid.ColumnSpan="2" HorizontalAlignment="Left"
                                  ItemsSource="{Binding Source={StaticResource storeDataProvider}}"
                                  SelectedItem="{Binding SelectedStore}" DisplayMemberPath="StoreName"/>
                        <CheckBox Grid.Column="2" IsChecked="{Binding SelectedStore.IsDefault}" Content="既定"
                                  VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                        <TextBlock Text="発店コード" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="2" />
                        <TextBox Text="{Binding SelectedStore.StoreId1}" Grid.Row="2" MinWidth="10" />
                        <TextBox Text="{Binding SelectedStore.StoreId2}" Grid.Row="2" Grid.Column="1" MinWidth="10" />
            
                        <TextBlock Text="お客様番号" Grid.Row="3" Grid.ColumnSpan="2" />
                        <TextBox Text="{Binding SelectedStore.CustomerCD}" Grid.ColumnSpan="3" Grid.Row="4"   />
            
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="140"/>
                            <ColumnDefinition Width="150"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="120" />
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                                <Setter Property="FontSize" Value="18" />
                                <Setter Property="Foreground" Value="White" />
                            </Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="FontSize" Value="18" />
                                <Setter Property="Foreground" Value="White" />
                            </Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Setter Property="FontSize" Value="18" />
                            </Style>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                <Setter Property="FontSize" Value="18" />
                            </Style>
                        </Grid.Resources>

                        <ComboBox Width="140"  HorizontalAlignment="Left"
                                    ItemsSource="{Binding Source={StaticResource reportMemoDataProvider}}"
                                    DisplayMemberPath="MemoName"
                                    SelectedItem="{Binding SelectedReportMemo}" />
                        <CheckBox IsChecked="{Binding SelectedReportMemo.IsDefault}" Content="既定" Grid.Row="0" Grid.Column="1"
                                    VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                        <TextBox Text="{Binding SelectedReportMemo.ReportMemo1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4"
                                    TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" />
                    </Grid>
                   
                </StackPanel>
            </StackPanel>
            <GridSplitter HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="4" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"/>
            <StackPanel Grid.Row="1" Grid.ColumnSpan="2" >
                <ToolBarTray >
                    <ToolBar>
                        <Button Command="{Binding AddOrderFromSelectedHistoryCommand}" Padding="10,0,10,0" Content="履歴から注文を追加"
                                 Height="30" FontSize="18" />
                        <Button Command="{Binding RemoveOrderFromSelectedHistoryCommand}" Padding="10,0,10,0" Content="履歴を削除"
                                 Height="30" FontSize="18" Margin="10,0,0,0" />
                        <CheckBox Content="同一顧客は直近の注文のみ表示" IsChecked="{Binding DistinctSameCustomer}"
                                  Command="{Binding DistinctSameCustomerClickCommand}" Margin="10,0,0,0" />
                        <Button Command="{Binding EditSelectedCustomerCommand}" Padding="30,0,30,0" Content="編　集"
                                 Height="30" FontSize="18" Margin="10,0,0,0" />
                    </ToolBar>
                </ToolBarTray>
                <ListView ItemsSource="{Binding OrderHistories}"
                          ScrollViewer.VerticalScrollBarVisibility="Visible" Height="170">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectedOrderHistoryChangedCommand}" CommandParameter="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn DisplayMemberBinding="{Binding OrderHistory.OrderDate}" Header="注文日付" Width="85"/>
                            <GridViewColumn DisplayMemberBinding="{Binding OrderHistory.CustomerMasterReceive.CustNo}" Header="顧客番号" Width="60"/>
                            <GridViewColumn DisplayMemberBinding="{Binding OrderHistory.CustomerMasterReceive.CustName}" Header="氏名" Width="120"/>
                            <GridViewColumn DisplayMemberBinding="{Binding OrderHistory.CustomerMasterReceive.PostalCD}" Header="郵便番号" Width="70"/>
                            <GridViewColumn DisplayMemberBinding="{Binding OrderHistory.CustomerMasterReceive.CityName}" Header="市町村名" Width="60"/>
                            <GridViewColumn DisplayMemberBinding="{Binding OrderHistory.CustomerMasterReceive.Address1}" Header="住所１" Width="150"/>
                            <GridViewColumn DisplayMemberBinding="{Binding OrderHistory.CustomerMasterReceive.Address2}" Header="住所２" Width="150"/>
                            <GridViewColumn DisplayMemberBinding="{Binding OrderHistory.CustomerMasterReceive.Address3}" Header="住所３" Width="150"/>
                            <GridViewColumn DisplayMemberBinding="{Binding OrderHistory.CustomerMasterReceive.Address4}" Header="住所４" Width="150"/>
                            <GridViewColumn DisplayMemberBinding="{Binding OrderHistory.CustomerMasterReceive.Phone}" Header="電話番号" Width="100"/>
                            <GridViewColumn DisplayMemberBinding="{Binding OrderHistory.CustomerMasterReceive.MailAddress}" Header="メールアドレス" Width="100"/>
                            <GridViewColumn Header="ラベル１" Width="30">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox Content="消す" IsChecked="{Binding OrderHistory.CustomerMasterSend.Label}" IsEnabled="False" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </StackPanel>
        </Grid>
    </DockPanel>
</UserControl>
